name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: tkuchhal
  IMAGE_NAME: template

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Run tests
        run: |
          echo "CONFIGMAP_VARIABLE=success" > env_vars
          echo "SECRETS_VARIABLE=success" >> env_vars
          pytest tests --junitxml=/test-results/junit.xml

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to GKE
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud container clusters get-credentials dev-cluster
          kubectl apply -f services/template/development/kubectl/deployment.yaml

  full-deployment:
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to GKE
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud container clusters get-credentials prod-cluster
          kubectl apply -f services/template/production/kubectl/deployment.yaml
