version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.16.0
  deploy-orb: tkuchh/deploy-orb@0.0.5

commands:
  deploy:
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      kubectl_filename:
        type: string
      config_path:
        type: string
      github_access_token:
        type: string
        default: $GITHUB_PAT
    steps:
      - run:
          name: Fetch latest build config
          command: |
            git clone https://workflowr:<<parameters.github_access_token>>@github.com/tkuchh/build.git ~/build
            cd ~/build
            git config user.email "cicdrunner@template.com"
            git config user.name "CI/CD"
            cd ~/build/<<parameters.config_path>>
            sed -i "s|image:\(.*\)/<<parameters.image_name>>:.*|image:\1/<<parameters.image_name>>:<<parameters.image_tag>>|" ./<<parameters.kubectl_filename>>
      - run:
          name: Record previous image
          command: export previous_image=$(kubectl get deployment <<parameters.image_name>> -o=jsonpath='{$.spec.template.spec.containers[:1].image}')
      - run:
          name: Deploy to GKE
          command: kubectl apply -f ~/build/<<parameters.config_path>>/<<parameters.kubectl_filename>>
      - run:
          name: Record previous image
          command: export current_image=$(kubectl get deployment <<parameters.image_name>> -o=jsonpath='{$.spec.template.spec.containers[:1].image}')
      - run:
          name: Record new image
          command: |
            kubectl annotate deployment <<parameters.image_name>> \
            current-image="$current_image" \
            previous-image="$previous_image" \
            update-time="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
      - run:
          name: Push the new version to git
          command: |
            cd ~/build
            git add ./<<parameters.config_path>>
            git commit -m "Update image tag to new-tag"
            git push origin main

jobs:
  build-and-test:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - deploy-orb/connect_to_container_repo
      - run:
          name: Build Docker Image
          command: |
            docker build -t gcr.io/testing-234907/template:$CIRCLE_SHA1 -t gcr.io/testing-234907/template:$CIRCLE_BUILD_NUM -t gcr.io/testing-234907/template:latest .
      - run:
          name: Export Environment Variables
          command: |
            env > env_vars
            echo "CONFIGMAP_VARIABLE=success" >> env_vars
            echo "SECRETS_VARIABLE=success" >> env_vars
      - run:
          name: Run Tests in Docker Image
          command: |
            docker run --env-file env_vars gcr.io/testing-234907/template:$CIRCLE_SHA1 pytest /code/tests/
      - run:
          name: Push Docker Image to Container Registry
          command: |
            docker push gcr.io/testing-234907/template:$CIRCLE_SHA1
            docker push gcr.io/testing-234907/template:$CIRCLE_BUILD_NUM
            docker push gcr.io/testing-234907/template:latest


  deploy-dev:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy-orb/connect_to_kubernetes:
          project_id: testing-234907
          cluster_name: dev-cluster
      - deploy:
          config_path: services/template/development
          kubectl_filename: deployment.yaml
          image_name: template
          image_tag: $CIRCLE_SHA1

  deploy-prod-canary:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy-orb/connect_to_kubernetes:
          project_id: testing-234907
          cluster_name: prod-cluster
      - deploy-orb/deploy:
          config_path: services/template/production
          kubectl_filename: deployment-canary.yaml
          image_name: template
          image_tag: $CIRCLE_SHA1

  rollback-prod-canary:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy-orb/connect_to_kubernetes:
          project_id: testing-234907
          cluster_name: prod-cluster
      - deploy-orb/deploy:
          config_path: services/template/production
          kubectl_filename: deployment-canary.yaml
          image_name: template
          image_tag: $CIRCLE_SHA1


  deploy-prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy-orb/connect_to_kubernetes:
          project_id: testing-234907
          cluster_name: prod-cluster
      - deploy-orb/deploy:
          config_path: services/template/production
          kubectl_filename: deployment.yaml
          image_name: template
          image_tag: $CIRCLE_SHA1

  rollback-prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy-orb/connect_to_kubernetes:
          project_id: testing-234907
          cluster_name: prod-cluster
      - deploy-orb/deploy:
          config_path: services/template/production
          kubectl_filename: deployment.yaml
          image_name: template
          image_tag: $CIRCLE_SHA1

workflows:
  version: 2
  build-test-release:
    jobs:
      - build-and-test:
          context: gcp_credentials
          filters:
            branches:
              only: main
      - deploy-dev:
          context:
            - gcp_credentials
            - build_repo_access
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - confirm-deploy-prod-canary:
          type: approval
          requires:
            - deploy-dev
      - deploy-prod-canary:
          context:
            - gcp_credentials
            - build_repo_access
          requires:
            - confirm-deploy-prod-canary
          filters:
            branches:
              only: main
      - confirm-deploy-to-prod:
          type: approval
          requires:
            - deploy-prod-canary
      - confirm-rollback-canary:
          type: approval
          requires:
            - deploy-prod-canary

      - rollback-prod-canary:
          context:
            - gcp_credentials
            - build_repo_access
          requires:
            - confirm-rollback-canary
          filters:
            branches:
              only: main

      - deploy-prod:
          context:
            - gcp_credentials
            - build_repo_access
          requires:
            - confirm-deploy-to-prod
          filters:
            branches:
              only: main


      - confirm-rollback-prod:
          type: approval
          requires:
            - deploy-prod


      - rollback-prod:
          context:
            - gcp_credentials
            - build_repo_access
          requires:
            - confirm-rollback-prod
          filters:
            branches:
              only: main